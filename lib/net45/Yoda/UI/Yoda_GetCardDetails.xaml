<Activity mc:Ignorable="sap sap2010" x:Class="Yoda_GetCardDetails" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="out_AccRegisteredCardsDataTable" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="in_AccountID" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1091,3883</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Yoda_GetCardDetails_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="34">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="30">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Yoda_GetCardDetails" sap:VirtualizedContainerService.HintSize="1101,3818" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Default="Yoda_GetCardDetails" Name="strXAMLName" />
      <Variable x:TypeArguments="x:String" Name="strCardsTableText" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="intRowCount" />
      <Variable x:TypeArguments="x:String" Name="strCardNumber" />
      <Variable x:TypeArguments="x:String" Name="strDate" />
      <Variable x:TypeArguments="x:String" Name="strDeposits" />
      <Variable x:TypeArguments="x:String" Name="strWithdrawals" />
      <Variable x:TypeArguments="x:String" Name="strNets" />
      <Variable x:TypeArguments="x:String" Name="strExpiryDate" />
      <Variable x:TypeArguments="x:String" Name="strCardType" />
      <Variable x:TypeArguments="x:String" Name="strBin" />
      <Variable x:TypeArguments="x:Boolean" Name="bEditButtonExists" />
      <Variable x:TypeArguments="x:Boolean" Name="bNoActiveCards" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message - Scraping Cards" sap:VirtualizedContainerService.HintSize="1059,91" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[strXAMLName+&quot;: Scraping Registered Cards page for &quot;+in_AccountID]" />
    <Assign DisplayName="Initialize DataTable = out_AccRegisteredCardsDataTable" sap:VirtualizedContainerService.HintSize="1059,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="sd:DataTable">[out_AccRegisteredCardsDataTable]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="sd:DataTable">[New System.Data.DataTable]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:BuildDataTable sap2010:Annotation.AnnotationText="Columns are:&#xA;CardNumber&#xA;CardType&#xA;RegisteredDate&#xA;ExpiryDate&#xA;Bin&#xA;Deposits&#xA;Withdrawals&#xA;Nets" DataTable="[out_AccRegisteredCardsDataTable]" DisplayName="Build Data Table - out_AccRegisteredCardsDataTable" sap:VirtualizedContainerService.HintSize="1059,206" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;CardNumber&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;CardType&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;RegisteredDate&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;ExpiryDate&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Bin&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Deposits&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Withdrawals&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Nets&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:BuildDataTable>
    <ui:MultipleAssign DisplayName="Multiple Assign - out_AccRegisteredCardsDataTable" sap:VirtualizedContainerService.HintSize="1059,98" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[out_AccRegisteredCardsDataTable.TableName]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">Cards</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
    </ui:MultipleAssign>
    <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" BrowserType="Chrome" DisplayName="Attach Browser 'Yoda Derwent Payment Page'" sap:VirtualizedContainerService.HintSize="1059,2980" sap2010:WorkflowViewState.IdRef="BrowserScope_1" InformativeScreenshot="f88870ce77f90fc174790e422ab19163" Selector="&lt;html app='chrome.exe' title='Yoda' /&gt;">
      <ui:BrowserScope.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Scrape Data" sap:VirtualizedContainerService.HintSize="1025,2834" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:Click AlterIfDisabled="{x:Null}" CursorMotionType="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Cards" sap:VirtualizedContainerService.HintSize="983,68" sap2010:WorkflowViewState.IdRef="Click_5" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
              <ui:Click.CursorPosition>
                <ui:CursorPosition Position="Center">
                  <ui:CursorPosition.OffsetX>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetX>
                  <ui:CursorPosition.OffsetY>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetY>
                </ui:CursorPosition>
              </ui:Click.CursorPosition>
              <ui:Click.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="4b80a4e5-3bc3-44e4-97d6-73a8752e038d" Selector="[String.Format(&quot;&lt;webctrl src='https://pyc*.prd.internal/accountManager?prod=*&amp;amp;aid={0}' tag='IFRAME' /&gt;&lt;webctrl parentid='tabs' tag='A' aaname='Cards' /&gt;&quot;, in_AccountID)]">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:Click.Target>
            </ui:Click>
            <ui:UiElementExists DisplayName="Element Exists - There are no active cards" Exists="[bNoActiveCards]" sap:VirtualizedContainerService.HintSize="983,68" sap2010:WorkflowViewState.IdRef="UiElementExists_4">
              <ui:UiElementExists.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="fd790697-d619-47d9-b5db-f72579c9e671" Selector="[String.Format(&quot;&lt;webctrl src='https://pyc*.prd.internal/accountManager?prod=*&amp;amp;aid={0}' tag='IFRAME' /&gt;&lt;webctrl parentid='cards' tag='H1' parentclass='no-registered-cards' /&gt;&quot;, in_AccountID)]" TimeoutMS="5000">
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:UiElementExists.Target>
            </ui:UiElementExists>
            <If Condition="[bNoActiveCards = False]" DisplayName="If There are Active Cards" sap:VirtualizedContainerService.HintSize="983,2526" sap2010:WorkflowViewState.IdRef="If_3">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="604,2369" sap2010:WorkflowViewState.IdRef="Sequence_17">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Assign bEditButtonExists" sap:VirtualizedContainerService.HintSize="562,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[bEditButtonExists]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign intRowCount" sap:VirtualizedContainerService.HintSize="562,60" sap2010:WorkflowViewState.IdRef="Assign_10">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[intRowCount]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">2</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:InterruptibleWhile Condition="[bEditButtonExists]" DisplayName="While bEditButtonExists" sap:VirtualizedContainerService.HintSize="562,2077" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_2">
                    <ui:InterruptibleWhile.Body>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="526,1912" sap2010:WorkflowViewState.IdRef="Sequence_16">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:UiElementExists DisplayName="Element Exists - Edit" Exists="[bEditButtonExists]" sap:VirtualizedContainerService.HintSize="484,68" sap2010:WorkflowViewState.IdRef="UiElementExists_3">
                          <ui:UiElementExists.Target>
                            <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="294cb858-15d7-43fd-a495-960efd4b89a3" Selector="[String.Format(&quot;&lt;webctrl src='https://pyc*.prd.internal/accountManager?prod=4&amp;amp;aid={0}' tag='IFRAME' /&gt;&lt;webctrl aaname='*Edit *' parentid='*' tag='A' tableRow='{1}' /&gt;&quot;, in_AccountID, intRowCount)]" TimeoutMS="5000">
                              <ui:Target.WaitForReady>
                                <InArgument x:TypeArguments="ui:WaitForReady" />
                              </ui:Target.WaitForReady>
                            </ui:Target>
                          </ui:UiElementExists.Target>
                        </ui:UiElementExists>
                        <If Condition="[bEditButtonExists]" DisplayName="If bEditButtonExists" sap:VirtualizedContainerService.HintSize="484,1612" sap2010:WorkflowViewState.IdRef="If_5">
                          <If.Then>
                            <Sequence DisplayName="Sequence - bEditButtonExists" sap:VirtualizedContainerService.HintSize="376,1426" sap2010:WorkflowViewState.IdRef="Sequence_14">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text - Card Number" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="GetValue_8">
                                <ui:GetValue.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="225fd4ed-65a7-4f59-96d9-488432f77a68" Selector="[String.Format(&quot;&lt;webctrl src='https://pyc*.prd.internal/accountManager?prod=*&amp;amp;aid={0}' tag='IFRAME' /&gt;&lt;webctrl tag='SPAN' parentclass='nickname-cell' tableRow='{1}' /&gt;&quot;, in_AccountID, intRowCount)]">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:GetValue.Target>
                                <ui:GetValue.Value>
                                  <OutArgument x:TypeArguments="x:String">[strCardNumber]</OutArgument>
                                </ui:GetValue.Value>
                              </ui:GetValue>
                              <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text - Expiry Date" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="GetValue_9">
                                <ui:GetValue.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="225fd4ed-65a7-4f59-96d9-488432f77a68" Selector="[String.Format(&quot;&lt;webctrl src='https://pyc*.prd.internal/accountManager?prod=*&amp;amp;aid={0}' tag='IFRAME' /&gt;&lt;webctrl tag='SPAN' class='expiryDate' tableRow='{1}' /&gt;&quot;, in_AccountID, intRowCount)]">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:GetValue.Target>
                                <ui:GetValue.Value>
                                  <OutArgument x:TypeArguments="x:String">[strExpiryDate]</OutArgument>
                                </ui:GetValue.Value>
                              </ui:GetValue>
                              <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text - Deposits" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="GetValue_10">
                                <ui:GetValue.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="225fd4ed-65a7-4f59-96d9-488432f77a68" Selector="[String.Format(&quot;&lt;webctrl src='https://pyc*.prd.internal/accountManager?prod=*&amp;amp;aid={0}' tag='IFRAME' /&gt;&lt;webctrl tag='TD' colName='*Withdrawals*' tableRow='{1}' /&gt;&quot;, in_AccountID, intRowCount)]">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:GetValue.Target>
                                <ui:GetValue.Value>
                                  <OutArgument x:TypeArguments="x:String">[strDeposits]</OutArgument>
                                </ui:GetValue.Value>
                              </ui:GetValue>
                              <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text - Withdrawals" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="GetValue_11">
                                <ui:GetValue.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="225fd4ed-65a7-4f59-96d9-488432f77a68" Selector="[String.Format(&quot;&lt;webctrl src='https://pyc*.prd.internal/accountManager?prod=*&amp;amp;aid={0}' tag='IFRAME' /&gt;&lt;webctrl tag='TD' colName='*Net*' tableRow='{1}' /&gt;&quot;, in_AccountID, intRowCount)]">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:GetValue.Target>
                                <ui:GetValue.Value>
                                  <OutArgument x:TypeArguments="x:String">[strWithdrawals]</OutArgument>
                                </ui:GetValue.Value>
                              </ui:GetValue>
                              <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text - Nets" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="GetValue_12">
                                <ui:GetValue.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="225fd4ed-65a7-4f59-96d9-488432f77a68" Selector="[String.Format(&quot;&lt;webctrl src='https://pyc*.prd.internal/accountManager?prod=*&amp;amp;aid={0}' tag='IFRAME' /&gt;&lt;webctrl tag='TD' colName='*Actions*' tableRow='{1}' /&gt;&quot;, in_AccountID, intRowCount)]">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:GetValue.Target>
                                <ui:GetValue.Value>
                                  <OutArgument x:TypeArguments="x:String">[strNets]</OutArgument>
                                </ui:GetValue.Value>
                              </ui:GetValue>
                              <Assign DisplayName="Assign strCardNumber (Get Last 4 Digits)" sap:VirtualizedContainerService.HintSize="334,60" sap2010:WorkflowViewState.IdRef="Assign_11">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[strCardNumber]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[Split(strCardNumber, " ")(Split(strCardNumber, " ").Count-1)]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:Click AlterIfDisabled="{x:Null}" CursorMotionType="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Edit" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="Click_3" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
                                <ui:Click.CursorPosition>
                                  <ui:CursorPosition Position="Center">
                                    <ui:CursorPosition.OffsetX>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetX>
                                    <ui:CursorPosition.OffsetY>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetY>
                                  </ui:CursorPosition>
                                </ui:Click.CursorPosition>
                                <ui:Click.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="4b80a4e5-3bc3-44e4-97d6-73a8752e038d" Selector="[String.Format(&quot;&lt;webctrl src='https://pycpp.prd.internal/accountManager?prod=4&amp;amp;aid={0}' tag='IFRAME' /&gt;&lt;webctrl aaname='*Edit *' parentid='*' tag='A' tableRow='{1}' /&gt;&quot;, in_AccountID, intRowCount)]">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:Click.Target>
                              </ui:Click>
                              <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text - BIN" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="GetValue_13">
                                <ui:GetValue.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="225fd4ed-65a7-4f59-96d9-488432f77a68" Selector="&lt;webctrl src='https://pyc*.prd.internal/accountManager?prod=4&amp;amp;aid=*' tag='IFRAME' /&gt;&lt;webctrl aaname='*' parentid='editForm' tag='SPAN' class='cardBin' /&gt;">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:GetValue.Target>
                                <ui:GetValue.Value>
                                  <OutArgument x:TypeArguments="x:String">[strBin]</OutArgument>
                                </ui:GetValue.Value>
                              </ui:GetValue>
                              <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text - Card Type" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="GetValue_14">
                                <ui:GetValue.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="225fd4ed-65a7-4f59-96d9-488432f77a68" Selector="&lt;webctrl src='https://pyc*.prd.internal/accountManager?prod=*&amp;amp;aid=*' tag='IFRAME' /&gt;&lt;webctrl parentid='editForm' tag='SPAN' class='cardType' /&gt;">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:GetValue.Target>
                                <ui:GetValue.Value>
                                  <OutArgument x:TypeArguments="x:String">[strCardType]</OutArgument>
                                </ui:GetValue.Value>
                              </ui:GetValue>
                              <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text - Registered Date" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="GetValue_15">
                                <ui:GetValue.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="225fd4ed-65a7-4f59-96d9-488432f77a68" Selector="&lt;webctrl src='https://pyc*.prd.internal/accountManager?prod=*&amp;amp;aid=*' tag='IFRAME' /&gt;&lt;webctrl parentid='editForm' tag='SPAN' class='regDate' /&gt;">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:GetValue.Target>
                                <ui:GetValue.Value>
                                  <OutArgument x:TypeArguments="x:String">[strDate]</OutArgument>
                                </ui:GetValue.Value>
                              </ui:GetValue>
                              <ui:AddDataRow DataRow="{x:Null}" sap2010:Annotation.AnnotationText="CardNumber&#xA;CardType&#xA;RegisteredDate&#xA;ExpiryDate&#xA;Bin&#xA;Deposits&#xA;Withdrawals&#xA;Nets" ArrayRow="[{&#xA;strCardNumber,&#xA;strCardType,&#xA;strDate,&#xA;strExpiryDate,&#xA;strBin,&#xA;strDeposits.Trim,&#xA;strWithdrawals.Trim,&#xA;strNets.Trim&#xA;}]" DataTable="[out_AccRegisteredCardsDataTable]" DisplayName="Add Data Row - out_AccRegisteredCardsDataTable" sap:VirtualizedContainerService.HintSize="334,154" sap2010:WorkflowViewState.IdRef="AddDataRow_2">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:AddDataRow>
                              <ui:Click AlterIfDisabled="{x:Null}" CursorMotionType="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Close" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="Click_4" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
                                <ui:Click.CursorPosition>
                                  <ui:CursorPosition Position="Center">
                                    <ui:CursorPosition.OffsetX>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetX>
                                    <ui:CursorPosition.OffsetY>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:CursorPosition.OffsetY>
                                  </ui:CursorPosition>
                                </ui:Click.CursorPosition>
                                <ui:Click.Target>
                                  <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="4b80a4e5-3bc3-44e4-97d6-73a8752e038d" Selector="&lt;webctrl src='https://pyc*.prd.internal/accountManager?prod=*&amp;amp;aid=*' tag='IFRAME' /&gt;&lt;webctrl aaname='Close' parentid='editForm' tag='DIV' /&gt;">
                                    <ui:Target.TimeoutMS>
                                      <InArgument x:TypeArguments="x:Int32" />
                                    </ui:Target.TimeoutMS>
                                    <ui:Target.WaitForReady>
                                      <InArgument x:TypeArguments="ui:WaitForReady" />
                                    </ui:Target.WaitForReady>
                                  </ui:Target>
                                </ui:Click.Target>
                              </ui:Click>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_15">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </Sequence>
                          </If.Else>
                        </If>
                        <Assign DisplayName="Assign intRowCount" sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">[intRowCount]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">[intRowCount+1]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </ui:InterruptibleWhile.Body>
                  </ui:InterruptibleWhile>
                </Sequence>
              </If.Then>
              <If.Else>
                <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text - There are no active cards" sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="GetValue_16">
                  <ui:GetValue.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="2a5b56f0-47a6-45cf-91be-6232440b261b" Selector="[String.Format(&quot;&lt;webctrl src='https://pyc*.prd.internal/accountManager?prod=*&amp;amp;aid={0}' tag='IFRAME' /&gt;&lt;webctrl parentid='cards' tag='H1' parentclass='no-registered-cards' /&gt;&quot;, in_AccountID)]">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:GetValue.Target>
                  <ui:GetValue.Value>
                    <OutArgument x:TypeArguments="x:String">[strCardsTableText]</OutArgument>
                  </ui:GetValue.Value>
                </ui:GetValue>
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:BrowserScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:BrowserScope>
    <ui:LogMessage DisplayName="Log Message - Cards Retrieved" sap:VirtualizedContainerService.HintSize="1059,91" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="Info" Message="[strXAMLName+&quot;: &quot;+out_AccRegisteredCardsDataTable.Rows.Count.ToString+&quot; Active Card&quot;+If(out_AccRegisteredCardsDataTable.Rows.Count = 1, &quot;&quot;, &quot;s&quot;)+&quot; retrieved for &quot;+in_AccountID+&#xA;If(bNoActiveCards,&#xA;&#x9;&quot; (Can see &quot;&quot;&quot;+strCardsTableText.Trim+&quot;&quot;&quot; Message on Page)&quot;,&#xA;&#x9;&quot;&quot;&#xA;)]" />
  </Sequence>
</Activity>