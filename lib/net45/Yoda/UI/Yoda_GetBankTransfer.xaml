<Activity mc:Ignorable="sap sap2010" x:Class="Yoda_GetBankTransfer" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_AccountID" Type="InArgument(x:String)" />
    <x:Property Name="out_AccBankTransferData" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="out_NotAllowedToWithdrawFunds" Type="OutArgument(x:Boolean)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1565,3015</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Yoda_GetCardDetails_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="34">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="29">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Yoda_GetBankTransfer" sap:VirtualizedContainerService.HintSize="922,2950" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Default="Yoda_GetBankTransfer" Name="strXAMLName" />
      <Variable x:TypeArguments="x:String" Name="strBankTransferTableText" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="intRowCount" />
      <Variable x:TypeArguments="x:String" Name="strDeposits" />
      <Variable x:TypeArguments="x:String" Name="strWithdrawals" />
      <Variable x:TypeArguments="x:String" Name="strNets" />
      <Variable x:TypeArguments="x:Boolean" Name="bEwalletExists" />
      <Variable x:TypeArguments="x:String" Name="strEWalletType" />
      <Variable x:TypeArguments="x:String" Name="strAssociatedDate" />
      <Variable x:TypeArguments="x:Boolean" Name="bNoActiveBankTransfer" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="listColumnNames" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message - Scraping Bank Transfer" sap:VirtualizedContainerService.HintSize="880,91" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[strXAMLName+&quot;: Scraping Bank Transfer page for &quot;+in_AccountID]" />
    <Assign DisplayName="Initialize DataTable = out_AccBankTransferData" sap:VirtualizedContainerService.HintSize="880,60" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="sd:DataTable">[out_AccBankTransferData]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="sd:DataTable">[New System.Data.DataTable]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:BuildDataTable sap2010:Annotation.AnnotationText="Columns are:&#xA;PayeeName&#xA;BankLocation&#xA;BankName&#xA;AccountHoldingBranch&#xA;AccountNumber&#xA;SortCode" DataTable="[out_AccBankTransferData]" DisplayName="Build Data Table - out_AccBankTransferData" sap:VirtualizedContainerService.HintSize="880,176" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;PayeeName&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;BankLocation&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;BankName&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;AccountHoldingBranch&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;AccountNumber&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;SortCode&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;&lt;/NewDataSet&gt;">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:BuildDataTable>
    <ui:MultipleAssign DisplayName="Multiple Assign - out_AccBankTransferData.TableName" sap:VirtualizedContainerService.HintSize="880,98" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[out_AccBankTransferData.TableName]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">BankTransfer</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
    </ui:MultipleAssign>
    <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" UiBrowser="{x:Null}" BrowserType="Chrome" DisplayName="Attach Browser 'Yoda Derwent Payment Page'" sap:VirtualizedContainerService.HintSize="880,2042" sap2010:WorkflowViewState.IdRef="BrowserScope_1" InformativeScreenshot="f88870ce77f90fc174790e422ab19163" Selector="&lt;html app='chrome.exe' title='Yoda' /&gt;">
      <ui:BrowserScope.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Scrape Data" sap:VirtualizedContainerService.HintSize="846,1896" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:Click AlterIfDisabled="{x:Null}" CursorMotionType="{x:Null}" DelayBefore="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Withdraw by Bank Transfer" sap:VirtualizedContainerService.HintSize="804,68" sap2010:WorkflowViewState.IdRef="Click_5" KeyModifiers="None" MouseButton="BTN_LEFT" SimulateClick="True">
              <ui:Click.CursorPosition>
                <ui:CursorPosition Position="Center">
                  <ui:CursorPosition.OffsetX>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetX>
                  <ui:CursorPosition.OffsetY>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetY>
                </ui:CursorPosition>
              </ui:Click.CursorPosition>
              <ui:Click.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="4b80a4e5-3bc3-44e4-97d6-73a8752e038d" Selector="[String.Format(&quot;&lt;webctrl src='https://pyc*.prd.internal/accountManager?prod=*&amp;amp;aid={0}' tag='IFRAME' /&gt;&lt;webctrl parentid='tabs' tag='A' aaname='Withdraw by Bank Transfer' /&gt;&quot;, in_AccountID)]">
                  <ui:Target.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:Target.TimeoutMS>
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:Click.Target>
            </ui:Click>
            <ui:UiElementExists DisplayName="Element Exists - Customer is not allowed to withdraw funds." Exists="[bNoActiveBankTransfer]" sap:VirtualizedContainerService.HintSize="804,68" sap2010:WorkflowViewState.IdRef="UiElementExists_4">
              <ui:UiElementExists.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="6fc2bf99-d3d5-4850-9806-444303127b8a" Selector="[String.Format(&quot;&lt;webctrl src='https://pyc*.prd.internal/accountManager?prod=*&amp;amp;aid={0}' tag='IFRAME' /&gt;&lt;webctrl tag='P' aaname='Customer is not allowed to withdraw funds.' /&gt;&quot;, in_AccountID)]" TimeoutMS="5000">
                  <ui:Target.WaitForReady>
                    <InArgument x:TypeArguments="ui:WaitForReady" />
                  </ui:Target.WaitForReady>
                </ui:Target>
              </ui:UiElementExists.Target>
            </ui:UiElementExists>
            <If Condition="[bNoActiveBankTransfer = False]" DisplayName="If There are Active Bak Transfers" sap:VirtualizedContainerService.HintSize="804,1588" sap2010:WorkflowViewState.IdRef="If_3">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="425,1431" sap2010:WorkflowViewState.IdRef="Sequence_17">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="x:String" Name="strPayeeName" />
                    <Variable x:TypeArguments="x:String" Name="strBankLocation" />
                    <Variable x:TypeArguments="x:String" Name="strBankName" />
                    <Variable x:TypeArguments="x:String" Name="strBankBranch" />
                    <Variable x:TypeArguments="x:String" Name="strAccountNumber" />
                    <Variable x:TypeArguments="x:String" Name="strSortCode" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text - Payee Name" sap:VirtualizedContainerService.HintSize="383,68" sap2010:WorkflowViewState.IdRef="GetValue_17">
                    <ui:GetValue.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="225fd4ed-65a7-4f59-96d9-488432f77a68" Selector="[String.Format(&quot;&lt;webctrl src='https://pyc*.prd.internal/accountManager?prod=*&amp;amp;aid={0}' tag='IFRAME' /&gt;&lt;webctrl tag='DIV' parentclass='formElement fid-payeeName' class='field' /&gt;&quot;, in_AccountID)]">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:GetValue.Target>
                    <ui:GetValue.Value>
                      <OutArgument x:TypeArguments="x:String">[strPayeeName]</OutArgument>
                    </ui:GetValue.Value>
                  </ui:GetValue>
                  <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text - Bank Location" sap:VirtualizedContainerService.HintSize="383,68" sap2010:WorkflowViewState.IdRef="GetValue_18">
                    <ui:GetValue.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="225fd4ed-65a7-4f59-96d9-488432f77a68" Selector="[String.Format(&quot;&lt;webctrl src='https://pyc*.prd.internal/accountManager?prod=*&amp;amp;aid={0}' tag='IFRAME' /&gt;&lt;webctrl id='selectric-label' tag='P' /&gt;&quot;, in_AccountID)]">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:GetValue.Target>
                    <ui:GetValue.Value>
                      <OutArgument x:TypeArguments="x:String">[strBankLocation]</OutArgument>
                    </ui:GetValue.Value>
                  </ui:GetValue>
                  <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text - Bank Name" sap:VirtualizedContainerService.HintSize="383,68" sap2010:WorkflowViewState.IdRef="GetValue_20">
                    <ui:GetValue.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="225fd4ed-65a7-4f59-96d9-488432f77a68" Selector="[String.Format(&quot;&lt;webctrl src='https://pyc*.prd.internal/accountManager?prod=*&amp;amp;aid={0}' tag='IFRAME' /&gt;&lt;webctrl tag='INPUT' type='text' name='bankName' /&gt;&quot;, in_AccountID)]">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:GetValue.Target>
                    <ui:GetValue.Value>
                      <OutArgument x:TypeArguments="x:String">[strBankName]</OutArgument>
                    </ui:GetValue.Value>
                  </ui:GetValue>
                  <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text - Bank Branch" sap:VirtualizedContainerService.HintSize="383,68" sap2010:WorkflowViewState.IdRef="GetValue_21">
                    <ui:GetValue.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="225fd4ed-65a7-4f59-96d9-488432f77a68" Selector="[String.Format(&quot;&lt;webctrl src='https://pyc*.prd.internal/accountManager?prod=*&amp;amp;aid={0}' tag='IFRAME' /&gt;&lt;webctrl name='accountBranch' tag='INPUT' type='text' /&gt;&quot;, in_AccountID)]">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:GetValue.Target>
                    <ui:GetValue.Value>
                      <OutArgument x:TypeArguments="x:String">[strBankBranch]</OutArgument>
                    </ui:GetValue.Value>
                  </ui:GetValue>
                  <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text - Account Number" sap:VirtualizedContainerService.HintSize="383,68" sap2010:WorkflowViewState.IdRef="GetValue_19">
                    <ui:GetValue.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="225fd4ed-65a7-4f59-96d9-488432f77a68" Selector="[String.Format(&quot;&lt;webctrl src='https://pyc*.prd.internal/accountManager?prod=*&amp;amp;aid={0}' tag='IFRAME' /&gt;&lt;webctrl name='accountNumber' tag='INPUT' type='text' /&gt;&quot;, in_AccountID)]">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:GetValue.Target>
                    <ui:GetValue.Value>
                      <OutArgument x:TypeArguments="x:String">[strAccountNumber]</OutArgument>
                    </ui:GetValue.Value>
                  </ui:GetValue>
                  <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text - Sort Code" sap:VirtualizedContainerService.HintSize="383,68" sap2010:WorkflowViewState.IdRef="GetValue_22">
                    <ui:GetValue.Target>
                      <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="225fd4ed-65a7-4f59-96d9-488432f77a68" Selector="[String.Format(&quot;&lt;webctrl src='https://pyc*.prd.internal/accountManager?prod=*&amp;amp;aid={0}' tag='IFRAME' /&gt;&lt;webctrl name='sortCode' tag='INPUT' type='text' /&gt;&quot;, in_AccountID)]">
                        <ui:Target.TimeoutMS>
                          <InArgument x:TypeArguments="x:Int32" />
                        </ui:Target.TimeoutMS>
                        <ui:Target.WaitForReady>
                          <InArgument x:TypeArguments="ui:WaitForReady" />
                        </ui:Target.WaitForReady>
                      </ui:Target>
                    </ui:GetValue.Target>
                    <ui:GetValue.Value>
                      <OutArgument x:TypeArguments="x:String">[strSortCode]</OutArgument>
                    </ui:GetValue.Value>
                  </ui:GetValue>
                  <ui:AddDataRow DataRow="{x:Null}" sap2010:Annotation.AnnotationText="Columns are:&#xA;PayeeName&#xA;BankLocation&#xA;BankName&#xA;AccountHoldingBranch&#xA;AccountNumber&#xA;SortCode" ArrayRow="[{&#xA;strPayeeName,&#xA;strBankLocation,&#xA;strBankName,&#xA;strBankBranch,&#xA;strAccountNumber,&#xA;strSortCode&#xA;}]" DataTable="[out_AccBankTransferData]" DisplayName="Add Data Row - out_AccBankTransferData" sap:VirtualizedContainerService.HintSize="383,139" sap2010:WorkflowViewState.IdRef="AddDataRow_1">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:AddDataRow>
                  <Assign DisplayName="Assign listColumnNames" sap:VirtualizedContainerService.HintSize="383,64" sap2010:WorkflowViewState.IdRef="Assign_14">
                    <Assign.To>
                      <OutArgument x:TypeArguments="scg:List(x:String)">[listColumnNames]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="scg:List(x:String)" xml:space="preserve">[New List(Of String) From{
"PayeeName",
"BankLocation",
"BankName",
"AccountHoldingBranch",
"AccountNumber",
"SortCode"
}]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[out_AccBankTransferData]" DisplayName="For Each Row in out_AccBankTransferData" sap:VirtualizedContainerService.HintSize="383,408" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                    <ui:ForEachRow.Body>
                      <ActivityAction x:TypeArguments="sd:DataRow">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body - For Each Row in out_AccBankTransferData" sap:VirtualizedContainerService.HintSize="349,289" sap2010:WorkflowViewState.IdRef="Sequence_18">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each item in listColumnNames" sap:VirtualizedContainerService.HintSize="307,197" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[listColumnNames]">
                            <ui:ForEach.Body>
                              <ActivityAction x:TypeArguments="x:String">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                                </ActivityAction.Argument>
                                <Assign DisplayName="Assign row(item)" sap:VirtualizedContainerService.HintSize="262,64" sap2010:WorkflowViewState.IdRef="Assign_15">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Object">[row(item)]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String" xml:space="preserve">[If(String.IsNullOrWhiteSpace(row(item).ToString),
"Not Populated in Yoda",
row(item).toString.trim
)]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </ActivityAction>
                            </ui:ForEach.Body>
                          </ui:ForEach>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEachRow.Body>
                  </ui:ForEachRow>
                </Sequence>
              </If.Then>
              <If.Else>
                <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text - Customer is not allowed to withdraw funds." sap:VirtualizedContainerService.HintSize="334,68" sap2010:WorkflowViewState.IdRef="GetValue_16">
                  <ui:GetValue.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="2a5b56f0-47a6-45cf-91be-6232440b261b" Selector="[String.Format(&quot;&lt;webctrl src='https://pyc*.prd.internal/accountManager?prod=*&amp;amp;aid={0}' tag='IFRAME' /&gt;&lt;webctrl tag='P' aaname='Customer is not allowed to withdraw funds.' /&gt;&quot;, in_AccountID)]">
                      <ui:Target.TimeoutMS>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:Target.TimeoutMS>
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:GetValue.Target>
                  <ui:GetValue.Value>
                    <OutArgument x:TypeArguments="x:String">[strBankTransferTableText]</OutArgument>
                  </ui:GetValue.Value>
                </ui:GetValue>
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:BrowserScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:BrowserScope>
    <Assign DisplayName="Assign out_NotAllowedToWithdrawFunds" sap:VirtualizedContainerService.HintSize="880,60" sap2010:WorkflowViewState.IdRef="Assign_16">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Boolean">[out_NotAllowedToWithdrawFunds]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Boolean">[strBankTransferTableText.ToLower.Contains("customer is not allowed to withdraw funds")]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:LogMessage DisplayName="Log Message - Bank Transfers Retrieved" sap:VirtualizedContainerService.HintSize="880,91" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="[If(out_NotAllowedToWithdrawFunds,&#xA;LogLevel.Warn,&#xA;LogLevel.Info&#xA;)]" Message="[strXAMLName+&quot;: &quot;+out_AccBankTransferData.Rows.Count.ToString+&quot; Active Bank Transfer&quot;+If(out_AccBankTransferData.Rows.Count = 1, &quot;&quot;, &quot;s&quot;)+&quot; retrieved for &quot;+in_AccountID+&#xA;If(bNoActiveBankTransfer,&#xA;&#x9;&quot; (Can see &quot;&quot;&quot;+strBankTransferTableText+&quot;&quot;&quot; Message on Page - Make sure to Navigate back to Derwant Payments if Required as this error will not redirect back automatically)&quot;,&#xA;&#x9;&quot;&quot;&#xA;)]" />
  </Sequence>
</Activity>