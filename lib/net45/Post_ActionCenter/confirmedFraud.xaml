<Activity mc:Ignorable="sap sap2010" x:Class="confirmedFraud" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:pf="clr-namespace:PPB_Yoda_Activities.Flags;assembly=PPB.Yoda.Activities" xmlns:pu="clr-namespace:PPB_Yoda_Activities.Update_Account;assembly=PPB.Yoda.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property sap2010:Annotation.AnnotationText="Transaction item to be processed. The type of this variable can be changed to match the transaction type in the process. For example, when processing data from a spreadsheet that is read into a DataTable, this type can be changed to DataRow. " Name="in_TransactionItem" Type="InArgument(ui:QueueItem)" />
    <x:Property sap2010:Annotation.AnnotationText="Yoda Token generated with PPB Yoda Authenticate" Name="in_YodaToken" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Example: BF_12345" Name="in_AccountNK" Type="InArgument(x:String)" />
    <x:Property Name="in_ClosureReason" Type="InArgument(x:String)" />
  </x:Members>
  <this:confirmedFraud.in_TransactionItem>
    <InArgument x:TypeArguments="ui:QueueItem" />
  </this:confirmedFraud.in_TransactionItem>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1839,2498</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>confirmedFraud_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>PPB_Yoda_Activities.Flags</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>PPB_Yoda_Activities.Update_Account</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>PPB.Yoda.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="confirmedFraud" sap:VirtualizedContainerService.HintSize="1849,2433" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="1807,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Action: Confirmed Fraud&quot;]" />
    <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="1807,412" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="2" RetryInterval="00:00:03">
      <ui:RetryScope.ActivityBody>
        <ActivityAction>
          <pu:Update_LockStatus DisplayName="Lock status - locked" sap:VirtualizedContainerService.HintSize="334,238" sap2010:WorkflowViewState.IdRef="Update_LockStatus_1" in_Account_NK="[in_AccountNK]" in_Cookie="[in_YodaToken]" in_Production="[Convert.ToBoolean(in_Config(&quot;Yoda_Production&quot;).ToString)]" in_lockstatus="True" />
        </ActivityAction>
      </ui:RetryScope.ActivityBody>
      <ui:RetryScope.Condition>
        <ActivityFunc x:TypeArguments="x:Boolean" />
      </ui:RetryScope.Condition>
    </ui:RetryScope>
    <If Condition="[in_ClosureReason.Contains(&quot;clientNotepassingOnExchangeClosure&quot;) OrElse in_ClosureReason.Contains(&quot;clientNotepassingOnExchangeToMsaClosureRegulated&quot;)]" DisplayName="If reason is clientNotepassingOnExchangeClosure or clientNotepassingOnExchangeToMsaClosureRegulated" sap:VirtualizedContainerService.HintSize="1807,1758" sap2010:WorkflowViewState.IdRef="If_5">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence DisplayName="Add Flag and update Security Status" sap:VirtualizedContainerService.HintSize="418,903" sap2010:WorkflowViewState.IdRef="Sequence_9">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="376,359" sap2010:WorkflowViewState.IdRef="RetryScope_3" NumberOfRetries="2" RetryInterval="00:00:03">
            <ui:RetryScope.ActivityBody>
              <ActivityAction>
                <pf:Add_Remove_Flags in_RemoveFlags="{x:Null}" out_AccountStatus="{x:Null}" DisplayName="Add Fraud Permanent Closure (High Risk)" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="Add_Remove_Flags_2" in_Account_NK="[in_AccountNK]" in_AddFlags="[{&quot;Fraud Permanent Closure (High Risk)&quot;}]" in_Cookie="[in_YodaToken]" in_Flag_Comment="FRAUD DETECTION BOT" in_Production="[Convert.ToBoolean(in_Config(&quot;Yoda_Production&quot;).ToString)]" />
              </ActivityAction>
            </ui:RetryScope.ActivityBody>
            <ui:RetryScope.Condition>
              <ActivityFunc x:TypeArguments="x:Boolean" />
            </ui:RetryScope.Condition>
          </ui:RetryScope>
          <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="376,412" sap2010:WorkflowViewState.IdRef="RetryScope_8" NumberOfRetries="2" RetryInterval="00:00:03">
            <ui:RetryScope.ActivityBody>
              <ActivityAction>
                <pu:Update_SecurityStatus DisplayName="Update_SecurityStatus to D" sap:VirtualizedContainerService.HintSize="334,238" sap2010:WorkflowViewState.IdRef="Update_SecurityStatus_5" in_Account_NK="[in_AccountNK]" in_Cookie="[in_YodaToken]" in_Production="[Convert.ToBoolean(in_Config(&quot;Yoda_Production&quot;).ToString)]" in_Security_Status="D" />
              </ActivityAction>
            </ui:RetryScope.ActivityBody>
            <ui:RetryScope.Condition>
              <ActivityFunc x:TypeArguments="x:Boolean" />
            </ui:RetryScope.Condition>
          </ui:RetryScope>
        </Sequence>
      </If.Then>
      <If.Else>
        <If Condition="[in_ClosureReason.Contains(&quot;clientNotepromotionAbuseRegulated&quot;)]" DisplayName="If reason is clientNotepromotionAbuseRegulated" sap:VirtualizedContainerService.HintSize="1344,1600" sap2010:WorkflowViewState.IdRef="If_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If.Then>
            <Sequence DisplayName="Add flag and update security status" sap:VirtualizedContainerService.HintSize="418,903" sap2010:WorkflowViewState.IdRef="Sequence_12">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="376,359" sap2010:WorkflowViewState.IdRef="RetryScope_9" NumberOfRetries="2" RetryInterval="00:00:03">
                <ui:RetryScope.ActivityBody>
                  <ActivityAction>
                    <pf:Add_Remove_Flags in_RemoveFlags="{x:Null}" out_AccountStatus="{x:Null}" DisplayName="Add Fraud Permanent Closure (High Risk)" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="Add_Remove_Flags_3" in_Account_NK="[in_AccountNK]" in_AddFlags="[{&quot;Fraud Permanent Closure (High Risk)&quot;}]" in_Cookie="[in_YodaToken]" in_Flag_Comment="FRAUD DETECTION BOT" in_Production="[Convert.ToBoolean(in_Config(&quot;Yoda_Production&quot;).ToString)]" />
                  </ActivityAction>
                </ui:RetryScope.ActivityBody>
                <ui:RetryScope.Condition>
                  <ActivityFunc x:TypeArguments="x:Boolean" />
                </ui:RetryScope.Condition>
              </ui:RetryScope>
              <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="376,412" sap2010:WorkflowViewState.IdRef="RetryScope_10" NumberOfRetries="2" RetryInterval="00:00:03">
                <ui:RetryScope.ActivityBody>
                  <ActivityAction>
                    <pu:Update_SecurityStatus DisplayName="Update_SecurityStatus to I" sap:VirtualizedContainerService.HintSize="334,238" sap2010:WorkflowViewState.IdRef="Update_SecurityStatus_6" in_Account_NK="[in_AccountNK]" in_Cookie="[in_YodaToken]" in_Production="[Convert.ToBoolean(in_Config(&quot;Yoda_Production&quot;).ToString)]" in_Security_Status="I" />
                  </ActivityAction>
                </ui:RetryScope.ActivityBody>
                <ui:RetryScope.Condition>
                  <ActivityFunc x:TypeArguments="x:Boolean" />
                </ui:RetryScope.Condition>
              </ui:RetryScope>
            </Sequence>
          </If.Then>
          <If.Else>
            <Sequence DisplayName="Check for spanish account and action" sap:VirtualizedContainerService.HintSize="881,1442" sap2010:WorkflowViewState.IdRef="Sequence_15">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If Condition="[in_Config(&quot;Country&quot;).ToString.Contains(&quot;ES&quot;)]" DisplayName="If Spanish Account" sap:VirtualizedContainerService.HintSize="839,740" sap2010:WorkflowViewState.IdRef="If_8">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence DisplayName="Spanish account" sap:VirtualizedContainerService.HintSize="418,582" sap2010:WorkflowViewState.IdRef="Sequence_13">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="376,91" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[&quot;Spanish account found&quot;]" />
                    <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="376,359" sap2010:WorkflowViewState.IdRef="RetryScope_13" NumberOfRetries="2" RetryInterval="00:00:03">
                      <ui:RetryScope.ActivityBody>
                        <ActivityAction>
                          <pf:Add_Remove_Flags in_RemoveFlags="{x:Null}" out_AccountStatus="{x:Null}" DisplayName="Add Fraud Permanent Closure (High Risk)" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="Add_Remove_Flags_5" in_Account_NK="[in_AccountNK]" in_AddFlags="[{&quot;Fraud Permanent Closure (High Risk)&quot;}]" in_Cookie="[in_YodaToken]" in_Flag_Comment="FRAUD DETECTION BOT" in_Production="[Convert.ToBoolean(in_Config(&quot;Yoda_Production&quot;).ToString)]" />
                        </ActivityAction>
                      </ui:RetryScope.ActivityBody>
                      <ui:RetryScope.Condition>
                        <ActivityFunc x:TypeArguments="x:Boolean" />
                      </ui:RetryScope.Condition>
                    </ui:RetryScope>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="376,359" sap2010:WorkflowViewState.IdRef="RetryScope_11" NumberOfRetries="2" RetryInterval="00:00:03">
                    <ui:RetryScope.ActivityBody>
                      <ActivityAction>
                        <pf:Add_Remove_Flags in_RemoveFlags="{x:Null}" out_AccountStatus="{x:Null}" DisplayName="Add Confirmed Fraud" sap:VirtualizedContainerService.HintSize="334,185" sap2010:WorkflowViewState.IdRef="Add_Remove_Flags_4" in_Account_NK="[in_AccountNK]" in_AddFlags="[{&quot;Confirmed Fraud&quot;}]" in_Cookie="[in_YodaToken]" in_Flag_Comment="FRAUD DETECTION BOT" in_Production="[Convert.ToBoolean(in_Config(&quot;Yoda_Production&quot;).ToString)]" />
                      </ActivityAction>
                    </ui:RetryScope.ActivityBody>
                    <ui:RetryScope.Condition>
                      <ActivityFunc x:TypeArguments="x:Boolean" />
                    </ui:RetryScope.Condition>
                  </ui:RetryScope>
                </If.Else>
              </If>
              <If Condition="[in_ClosureReason.Contains(&quot;clientNotepassingOnExchangePromoAbuse&quot;) OrElse in_ClosureReason.Contains(&quot;clientNotepromotionAbuseClosure&quot;)]" DisplayName="If reason is clientNotepassingOnExchangePromoAbuse or clientNotepromotionAbuseClosure" sap:VirtualizedContainerService.HintSize="839,570" sap2010:WorkflowViewState.IdRef="If_9">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="376,412" sap2010:WorkflowViewState.IdRef="RetryScope_15" NumberOfRetries="2" RetryInterval="00:00:03">
                    <ui:RetryScope.ActivityBody>
                      <ActivityAction>
                        <pu:Update_SecurityStatus DisplayName="Update_SecurityStatus to I" sap:VirtualizedContainerService.HintSize="334,238" sap2010:WorkflowViewState.IdRef="Update_SecurityStatus_9" in_Account_NK="[in_AccountNK]" in_Cookie="[in_YodaToken]" in_Production="[Convert.ToBoolean(in_Config(&quot;Yoda_Production&quot;).ToString)]" in_Security_Status="I" />
                      </ActivityAction>
                    </ui:RetryScope.ActivityBody>
                    <ui:RetryScope.Condition>
                      <ActivityFunc x:TypeArguments="x:Boolean" />
                    </ui:RetryScope.Condition>
                  </ui:RetryScope>
                </If.Then>
                <If.Else>
                  <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="376,412" sap2010:WorkflowViewState.IdRef="RetryScope_16" NumberOfRetries="2" RetryInterval="00:00:03">
                    <ui:RetryScope.ActivityBody>
                      <ActivityAction>
                        <pu:Update_SecurityStatus DisplayName="Update_SecurityStatus to D" sap:VirtualizedContainerService.HintSize="334,238" sap2010:WorkflowViewState.IdRef="Update_SecurityStatus_10" in_Account_NK="[in_AccountNK]" in_Cookie="[in_YodaToken]" in_Production="[Convert.ToBoolean(in_Config(&quot;Yoda_Production&quot;).ToString)]" in_Security_Status="D" />
                      </ActivityAction>
                    </ui:RetryScope.ActivityBody>
                    <ui:RetryScope.Condition>
                      <ActivityFunc x:TypeArguments="x:Boolean" />
                    </ui:RetryScope.Condition>
                  </ui:RetryScope>
                </If.Else>
              </If>
            </Sequence>
          </If.Else>
        </If>
      </If.Else>
    </If>
  </Sequence>
</Activity>